
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://fxphpfvfcogalwtbishv.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ4cGhwZnZmY29nYWx3dGJpc2h2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU0NTQyNDksImV4cCI6MjA2MTAzMDI0OX0.9sxvHMcbdX8n0VY_3sNF9qL7i5EN8FAMOHWy738reh0";

// Create the Supabase client with simplified configuration
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true,
      storageKey: 'supabase-horeca-app-auth'
    },
    db: {
      schema: 'public'
    },
    global: {
      headers: {
        'x-application-name': 'horeca-app'
      }
    }
  }
);

// Simple database connection test
const testDatabaseConnection = async () => {
  try {
    console.log("[Database] Testing connection...");
    
    const { data, error } = await supabase
      .from('cafes')
      .select('count')
      .limit(1);
    
    if (error) {
      console.error('[Database] Connection test failed:', error);
    } else {
      console.log('[Database] Connection test successful');
    }
  } catch (error) {
    console.error('[Database] Connection test error:', error);
  }
};

// Test connection after a short delay
setTimeout(testDatabaseConnection, 1000);

// Force a data refresh - simplified event-based approach
export const refreshCafeData = () => {
  console.log('[refreshCafeData] Triggering data refresh through events');
  
  // Dispatch event for same-tab communication
  window.dispatchEvent(new CustomEvent('horeca_data_updated'));
  
  // Update localStorage for cross-tab communication
  localStorage.setItem('cafe_data_updated', String(new Date().getTime()));
};
